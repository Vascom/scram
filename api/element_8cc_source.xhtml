<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>element.cc Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">element.cc</div>  </div>
</div><!--header-->
<div class="contents">
<a href="element_8cc.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Implementation of helper features for all elements of the analysis.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="element_8h.xhtml">element.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1mef.xhtml">scram::mef</a> {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Element.xhtml#a006e56dfae6a5a3bb91f1a4644ed59fa">   25</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1Element.xhtml#a006e56dfae6a5a3bb91f1a4644ed59fa">Element::Element</a>(std::string name) { <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">Element::name</a>(std::move(name)); }</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Element.xhtml#aeefcc50a0919f55dea5ecb95cb87e86b">   27</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">Element::name</a>(std::string <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordflow">if</span> (name.empty())</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1LogicError.xhtml">LogicError</a>(<span class="stringliteral">&quot;The element name cannot be empty&quot;</span>));</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordflow">if</span> (name.find(<span class="charliteral">&#39;.&#39;</span>) != std::string::npos)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a>(<span class="stringliteral">&quot;The element name is malformed.&quot;</span>));</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  name_ = std::move(name);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Element.xhtml#ad5906432084ef153b708dbe77307d4f9">   35</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml#ad5906432084ef153b708dbe77307d4f9">Element::AddAttribute</a>(<a class="code" href="classscram_1_1mef_1_1Attribute.xhtml">Attribute</a> attr) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordflow">if</span> (attributes_.<a class="code" href="classext_1_1linear__set.xhtml#a4802c2d5b142b5badc347ae6f4ac0025">insert</a>(std::move(attr)).second == <span class="keyword">false</span>) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a>(<span class="stringliteral">&quot;Duplicate attribute&quot;</span>))</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        &lt;&lt; <a class="code" href="error_8h.xhtml#a703fb9ed520e2a4b9ae4076e58ad1b61">errinfo_element</a>(name_, <span class="stringliteral">&quot;element&quot;</span>) &lt;&lt; <a class="code" href="error_8h.xhtml#a8b3638e3f64f0885e0523df059be4bc8">errinfo_attribute</a>(attr.<a class="code" href="classscram_1_1mef_1_1Attribute.xhtml#ac7f1839e267723753611c9ae863da8a0">name</a>());</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Element.xhtml#ade794914239aa855a85d4408299024b3">   42</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml#ade794914239aa855a85d4408299024b3">Element::SetAttribute</a>(<a class="code" href="classscram_1_1mef_1_1Attribute.xhtml">Attribute</a> attr) noexcept {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">auto</span> [it, success] = attributes_.<a class="code" href="classext_1_1linear__set.xhtml#a4802c2d5b142b5badc347ae6f4ac0025">insert</a>(std::move(attr));</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordflow">if</span> (!success)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    *it = std::move(attr);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Element.xhtml#adc6d9dba718f5c89524803d035f94e05">   48</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Attribute.xhtml">Attribute</a>* <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adc6d9dba718f5c89524803d035f94e05">Element::GetAttribute</a>(std::string_view <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>) <span class="keyword">const</span> noexcept {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keyword">auto</span> it = attributes_.<a class="code" href="classext_1_1linear__set.xhtml#a69ed39f3d7df4fd4dd53a05f6a600f63">find</a>(<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordflow">if</span> (it != attributes_.<a class="code" href="classext_1_1linear__set.xhtml#a155eaa9a4cd913286959ad03f01e2306">end</a>())</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> &amp;*it;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="classscram_1_1mef_1_1ContainerElement.xhtml#a6594a0f41cf172ef1ddf4cb25398d485">container</a>() ? <a class="code" href="classscram_1_1mef_1_1ContainerElement.xhtml#a6594a0f41cf172ef1ddf4cb25398d485">container</a>()-&gt;<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adc6d9dba718f5c89524803d035f94e05">GetAttribute</a>(<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;std::optional&lt;Attribute&gt;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Element.xhtml#adbe5cb2da18b56b56a6c6542a0492373">   57</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adbe5cb2da18b56b56a6c6542a0492373">Element::RemoveAttribute</a>(std::string_view <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>) noexcept {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  std::optional&lt;Attribute&gt; attr;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keyword">auto</span> it = attributes_.<a class="code" href="classext_1_1linear__set.xhtml#a69ed39f3d7df4fd4dd53a05f6a600f63">find</a>(<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordflow">if</span> (it != attributes_.<a class="code" href="classext_1_1linear__set.xhtml#a155eaa9a4cd913286959ad03f01e2306">end</a>()) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    attr = std::move(*it);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    attributes_.<a class="code" href="classext_1_1linear__set.xhtml#a83e0ac9e967737c9c15ead98e5f460fa">erase</a>(it);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordflow">return</span> attr;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Role.xhtml#a7e4df5c4a7911c56389f9a57af37c5ad">   67</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1Role.xhtml#a7e4df5c4a7911c56389f9a57af37c5ad">Role::Role</a>(<a class="code" href="element_8h.xhtml#a8b010dadcc37f6b3d3076e3d1a0c3ee0">RoleSpecifier</a> role, std::string base_path)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    : kBasePath_(std::move(base_path)), kRole_(role) {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordflow">if</span> (!kBasePath_.empty() &amp;&amp;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      (kBasePath_.front() == <span class="charliteral">&#39;.&#39;</span> || kBasePath_.back() == <span class="charliteral">&#39;.&#39;</span>)) {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a>(<span class="stringliteral">&quot;Element reference base path is malformed.&quot;</span>));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordflow">if</span> (kRole_ == RoleSpecifier::kPrivate &amp;&amp; kBasePath_.empty())</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a>(<span class="stringliteral">&quot;Elements cannot be private at model scope.&quot;</span>));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Id.xhtml#aae8674c47f234e5d98dfcfa1b6cf69c1">   77</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1Id.xhtml#aae8674c47f234e5d98dfcfa1b6cf69c1">Id::Id</a>(std::string name, std::string <a class="code" href="classscram_1_1mef_1_1Role.xhtml#ab91a51488ee8c4ed054de1e8450c8a59">base_path</a>, <a class="code" href="element_8h.xhtml#a8b010dadcc37f6b3d3076e3d1a0c3ee0">RoleSpecifier</a> <a class="code" href="classscram_1_1mef_1_1Role.xhtml#aa1843c29411c29b27d79414d34525bbc">role</a>)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    : <a class="code" href="classscram_1_1mef_1_1Element.xhtml">Element</a>(std::move(name)),</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <a class="code" href="classscram_1_1mef_1_1Role.xhtml">Role</a>(role, std::move(base_path)),</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      full_path_(<a class="code" href="element_8h.xhtml#aa0a41336bfd1eb2482e64470eddf3a2c">GetFullPath</a>(this)) {}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Id.xhtml#afa644b550e338f53cc22a867e2ac52a9">   82</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Id.xhtml#a7e258c5f6332715d5ed6a3fdbf681a8b">Id::id</a>(std::string <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">Element::name</a>(std::move(name));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  full_path_ = <a class="code" href="element_8h.xhtml#aa0a41336bfd1eb2482e64470eddf3a2c">GetFullPath</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}  <span class="comment">// namespace scram::mef</span></div><div class="ttc" id="classscram_1_1mef_1_1Id_xhtml_a7e258c5f6332715d5ed6a3fdbf681a8b"><div class="ttname"><a href="classscram_1_1mef_1_1Id.xhtml#a7e258c5f6332715d5ed6a3fdbf681a8b">scram::mef::Id::id</a></div><div class="ttdeci">const std::string &amp; id() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00318">element.h:318</a></div></div>
<div class="ttc" id="error_8h_xhtml_a703fb9ed520e2a4b9ae4076e58ad1b61"><div class="ttname"><a href="error_8h.xhtml#a703fb9ed520e2a4b9ae4076e58ad1b61">scram::mef::errinfo_element</a></div><div class="ttdeci">boost::tuple&lt; errinfo_element_id, errinfo_element_type &gt; errinfo_element</div><div class="ttdoc">The MEF element identifier data in errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00125">error.h:125</a></div></div>
<div class="ttc" id="classext_1_1linear__set_xhtml_a83e0ac9e967737c9c15ead98e5f460fa"><div class="ttname"><a href="classext_1_1linear__set.xhtml#a83e0ac9e967737c9c15ead98e5f460fa">ext::linear_set::erase</a></div><div class="ttdeci">iterator erase(const_iterator pos)</div><div class="ttdoc">Erases the entry pointed by an iterator. </div><div class="ttdef"><b>Definition:</b> <a href="linear__set_8h_source.xhtml#l00240">linear_set.h:240</a></div></div>
<div class="ttc" id="classext_1_1linear__set_xhtml_a155eaa9a4cd913286959ad03f01e2306"><div class="ttname"><a href="classext_1_1linear__set.xhtml#a155eaa9a4cd913286959ad03f01e2306">ext::linear_set::end</a></div><div class="ttdeci">iterator end()</div><div class="ttdef"><b>Definition:</b> <a href="linear__set_8h_source.xhtml#l00290">linear_set.h:290</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Role_xhtml_aa1843c29411c29b27d79414d34525bbc"><div class="ttname"><a href="classscram_1_1mef_1_1Role.xhtml#aa1843c29411c29b27d79414d34525bbc">scram::mef::Role::role</a></div><div class="ttdeci">RoleSpecifier role() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00280">element.h:280</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_a006e56dfae6a5a3bb91f1a4644ed59fa"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#a006e56dfae6a5a3bb91f1a4644ed59fa">scram::mef::Element::Element</a></div><div class="ttdeci">Element(std::string name)</div><div class="ttdoc">Constructs an element with an original name. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00025">element.cc:25</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Attribute_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Attribute.xhtml">scram::mef::Attribute</a></div><div class="ttdoc">MEF Element Attributes. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00079">element.h:79</a></div></div>
<div class="ttc" id="element_8h_xhtml"><div class="ttname"><a href="element_8h.xhtml">element.h</a></div><div class="ttdoc">Base/mixin classes, structs, and properties common to all MEF classes/constructs. ...</div></div>
<div class="ttc" id="namespacescram_1_1mef_xhtml"><div class="ttname"><a href="namespacescram_1_1mef.xhtml">scram::mef</a></div><div class="ttdef"><b>Definition:</b> <a href="alignment_8cc_source.xhtml#l00026">alignment.cc:26</a></div></div>
<div class="ttc" id="element_8h_xhtml_aa0a41336bfd1eb2482e64470eddf3a2c"><div class="ttname"><a href="element_8h.xhtml#aa0a41336bfd1eb2482e64470eddf3a2c">scram::mef::GetFullPath</a></div><div class="ttdeci">std::string GetFullPath(const T *element)</div><div class="ttdoc">Computes the full path of an element. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00301">element.h:301</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Id_xhtml_aae8674c47f234e5d98dfcfa1b6cf69c1"><div class="ttname"><a href="classscram_1_1mef_1_1Id.xhtml#aae8674c47f234e5d98dfcfa1b6cf69c1">scram::mef::Id::Id</a></div><div class="ttdeci">Id(std::string name, std::string base_path=&quot;&quot;, RoleSpecifier role=RoleSpecifier::kPublic)</div><div class="ttdoc">Constructs an element with an original name. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00077">element.cc:77</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1ContainerElement_xhtml_a6594a0f41cf172ef1ddf4cb25398d485"><div class="ttname"><a href="classscram_1_1mef_1_1ContainerElement.xhtml#a6594a0f41cf172ef1ddf4cb25398d485">scram::mef::ContainerElement::container</a></div><div class="ttdeci">const Element * container() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00056">element.h:56</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_ade794914239aa855a85d4408299024b3"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#ade794914239aa855a85d4408299024b3">scram::mef::Element::SetAttribute</a></div><div class="ttdeci">void SetAttribute(Attribute attr) noexcept</div><div class="ttdoc">Sets an attribute to the attribute map. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00042">element.cc:42</a></div></div>
<div class="ttc" id="error_8h_xhtml_a766d8477fec3466ae1d75208fe0554e7"><div class="ttname"><a href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a></div><div class="ttdeci">#define SCRAM_THROW(err)</div><div class="ttdoc">Convenience macro to throw SCRAM exceptions. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00044">error.h:44</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adbe5cb2da18b56b56a6c6542a0492373"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adbe5cb2da18b56b56a6c6542a0492373">scram::mef::Element::RemoveAttribute</a></div><div class="ttdeci">std::optional&lt; Attribute &gt; RemoveAttribute(std::string_view name) noexcept</div><div class="ttdoc">Removes an attribute of this element. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00057">element.cc:57</a></div></div>
<div class="ttc" id="error_8h_xhtml_a8b3638e3f64f0885e0523df059be4bc8"><div class="ttname"><a href="error_8h.xhtml#a8b3638e3f64f0885e0523df059be4bc8">scram::mef::errinfo_attribute</a></div><div class="ttdeci">boost::error_info&lt; struct tag_attribute, std::string &gt; errinfo_attribute</div><div class="ttdoc">MEF Element Attribute. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00117">error.h:117</a></div></div>
<div class="ttc" id="classext_1_1linear__set_xhtml_a69ed39f3d7df4fd4dd53a05f6a600f63"><div class="ttname"><a href="classext_1_1linear__set.xhtml#a69ed39f3d7df4fd4dd53a05f6a600f63">ext::linear_set::find</a></div><div class="ttdeci">const_iterator find(const key_type &amp;key) const </div><div class="ttdoc">Finds an entry in the set by key. </div><div class="ttdef"><b>Definition:</b> <a href="linear__set_8h_source.xhtml#l00151">linear_set.h:151</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_ad5906432084ef153b708dbe77307d4f9"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#ad5906432084ef153b708dbe77307d4f9">scram::mef::Element::AddAttribute</a></div><div class="ttdeci">void AddAttribute(Attribute attr)</div><div class="ttdoc">Adds an attribute to the attribute map of this element. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00035">element.cc:35</a></div></div>
<div class="ttc" id="element_8h_xhtml_a8b010dadcc37f6b3d3076e3d1a0c3ee0"><div class="ttname"><a href="element_8h.xhtml#a8b010dadcc37f6b3d3076e3d1a0c3ee0">scram::mef::RoleSpecifier</a></div><div class="ttdeci">RoleSpecifier</div><div class="ttdoc">Role, access attributes for elements. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00259">element.h:259</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Role_xhtml_a7e4df5c4a7911c56389f9a57af37c5ad"><div class="ttname"><a href="classscram_1_1mef_1_1Role.xhtml#a7e4df5c4a7911c56389f9a57af37c5ad">scram::mef::Role::Role</a></div><div class="ttdeci">Role(RoleSpecifier role=RoleSpecifier::kPublic, std::string base_path=&quot;&quot;)</div><div class="ttdoc">Sets the role of an element upon creation. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00067">element.cc:67</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adb401e2ca84aa98cb60797bec2500a81"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">scram::mef::Element::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00164">element.h:164</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml">scram::mef::Element</a></div><div class="ttdoc">The MEF Element with attributes and a label. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00135">element.h:135</a></div></div>
<div class="ttc" id="classext_1_1linear__set_xhtml_a4802c2d5b142b5badc347ae6f4ac0025"><div class="ttname"><a href="classext_1_1linear__set.xhtml#a4802c2d5b142b5badc347ae6f4ac0025">ext::linear_set::insert</a></div><div class="ttdeci">std::pair&lt; iterator, bool &gt; insert(const value_type &amp;value)</div><div class="ttdoc">Inserts a value into the set if the equal value is not in the set. </div><div class="ttdef"><b>Definition:</b> <a href="linear__set_8h_source.xhtml#l00185">linear_set.h:185</a></div></div>
<div class="ttc" id="structscram_1_1LogicError_xhtml"><div class="ttname"><a href="structscram_1_1LogicError.xhtml">scram::LogicError</a></div><div class="ttdoc">Signals internal logic errors, for example, pre-condition failure or use of functionality in ways not...</div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00089">error.h:89</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adc6d9dba718f5c89524803d035f94e05"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adc6d9dba718f5c89524803d035f94e05">scram::mef::Element::GetAttribute</a></div><div class="ttdeci">const Attribute * GetAttribute(std::string_view name) const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00048">element.cc:48</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Attribute_xhtml_ac7f1839e267723753611c9ae863da8a0"><div class="ttname"><a href="classscram_1_1mef_1_1Attribute.xhtml#ac7f1839e267723753611c9ae863da8a0">scram::mef::Attribute::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00093">element.h:93</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1ValidityError_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1ValidityError.xhtml">scram::mef::ValidityError</a></div><div class="ttdoc">Model validity errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00141">error.h:141</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Role_xhtml_ab91a51488ee8c4ed054de1e8450c8a59"><div class="ttname"><a href="classscram_1_1mef_1_1Role.xhtml#ab91a51488ee8c4ed054de1e8450c8a59">scram::mef::Role::base_path</a></div><div class="ttdeci">const std::string &amp; base_path() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00283">element.h:283</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Role_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Role.xhtml">scram::mef::Role</a></div><div class="ttdoc">Mixin class that manages private or public roles for elements as needed. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00265">element.h:265</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Feb 19 2018 00:21:32 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
