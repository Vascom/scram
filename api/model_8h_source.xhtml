<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>model.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">model.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="model_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Representation for a model container for risk analysis.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string_view&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="alignment_8h.xhtml">alignment.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="ccf__group_8h.xhtml">ccf_group.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="element_8h.xhtml">element.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event_8h.xhtml">event.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event__tree_8h.xhtml">event_tree.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="expression_8h.xhtml">expression.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="extern_8h.xhtml">expression/extern.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="test__event_8h.xhtml">expression/test_event.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="fault__tree_8h.xhtml">fault_tree.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="instruction_8h.xhtml">instruction.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="parameter_8h.xhtml">parameter.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="substitution_8h.xhtml">substitution.h</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1mef.xhtml">scram::mef</a> {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/// This class represents a risk analysis model.</span></div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml">   44</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1Model.xhtml">Model</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml">Element</a>,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;              <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Composite.xhtml">Composite</a>&lt;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                  Container&lt;Model, InitiatingEvent&gt;,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                  Container&lt;Model, EventTree&gt;, Container&lt;Model, Sequence&gt;,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                  Container&lt;Model, Rule&gt;, Container&lt;Model, Alignment&gt;,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                  Container&lt;Model, Substitution&gt;, Container&lt;Model, FaultTree&gt;,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                  Container&lt;Model, BasicEvent&gt;, Container&lt;Model, Gate&gt;,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                  Container&lt;Model, HouseEvent&gt;, Container&lt;Model, Parameter&gt;,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                  Container&lt;Model, CcfGroup&gt;, Container&lt;Model, ExternLibrary&gt;,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                  Container&lt;Model, ExternFunction&lt;void&gt;&gt;&gt; {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">  /// Container type identifier string for error messages.</span></div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#aa2ee24c81f3e65c321ee3084281f7c14">   56</a></span>&#160;<span class="comment"></span>  <span class="keyword">static</span> constexpr <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classscram_1_1mef_1_1Model.xhtml#aa2ee24c81f3e65c321ee3084281f7c14">kTypeString</a> = <span class="stringliteral">&quot;model&quot;</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">  /// Only Model is allowed to have an optional name,</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">  /// while all other Elements require names.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">  /// An empty name is an error for Element class invariants as well.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">  /// This leads to a nasty magic string based optional name for a model.</span></div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a8b18d45a049aaf5cb67c86d0eda87b97">   62</a></span>&#160;<span class="comment"></span>  <span class="keyword">static</span> constexpr <span class="keyword">const</span> <span class="keywordtype">char</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8b18d45a049aaf5cb67c86d0eda87b97">kDefaultName</a>[] = <span class="stringliteral">&quot;__unnamed-model__&quot;</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">  /// Creates a model container.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">  /// @param[in] name  The optional name for the model.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">  /// @throws ValidityError  The name is malformed.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span>  <span class="keyword">explicit</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a9cc591bf6c40805064ea0a9ec0c453c7">Model</a>(std::string <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a> = <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">  /// @returns true if the model name has not been set.</span></div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a742b8f5f989b633eeeeb192d2e793181">   72</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">bool</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a742b8f5f989b633eeeeb192d2e793181">HasDefaultName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">Element::name</a>() == <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8b18d45a049aaf5cb67c86d0eda87b97">kDefaultName</a>; }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">  /// @returns The model name or an empty string for the optional name.</span></div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a8c11c1a8b9cd08ac3305ceb35d2ae2b4">   75</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> std::string&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8c11c1a8b9cd08ac3305ceb35d2ae2b4">GetOptionalName</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::string empty_name(<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a742b8f5f989b633eeeeb192d2e793181">HasDefaultName</a>() ? empty_name : <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">Element::name</a>();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">  /// Sets the optional name of the model.</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a63c29088e50a8e55a75a8c707ee068d3">   81</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a63c29088e50a8e55a75a8c707ee068d3">SetOptionalName</a>(std::string <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a> = <span class="stringliteral">&quot;&quot;</span>) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">Element::name</a>(<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>.empty() ? kDefaultName : std::move(<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>));</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">  /// @returns The mission time expression for the whole model.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">  /// @{</span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">   87</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml">MissionTime</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">mission_time</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> *mission_time_; }</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a0084076e529d8ffc6201bad45517c43e">   88</a></span>&#160;  <a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml">MissionTime</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a0084076e529d8ffc6201bad45517c43e">mission_time</a>() { <span class="keywordflow">return</span> *mission_time_; }<span class="comment"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">  /// @}</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">  /// @returns The context to be used by test-event expressions</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">  ///          for event-tree walks.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">  /// @note There&#39;s only single context for the whole model (i.e., global);</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">  ///       two event-trees cannot be walked concurrently.</span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a13bd4eb71c3f15f4eece041f19488744">   96</a></span>&#160;<span class="comment"></span>  <a class="code" href="structscram_1_1mef_1_1Context.xhtml">Context</a>* <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a13bd4eb71c3f15f4eece041f19488744">context</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="structscram_1_1mef_1_1Context.xhtml">Context</a>*<span class="keyword">&gt;</span>(&amp;context_); }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">  /// @returns Table ranges of the elements in the model.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">  /// @{</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#af94cbabe75f57f3a1b1ae5d99a09e82b">  100</a></span>&#160;<span class="comment"></span>  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#af94cbabe75f57f3a1b1ae5d99a09e82b">initiating_events</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;InitiatingEvent&gt;(); }</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ac53c6c0aeaa349b2a0097ec06a51854e">  101</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ac53c6c0aeaa349b2a0097ec06a51854e">event_trees</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;EventTree&gt;(); }</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a208975bc0787772b40899970be5d8bcf">  102</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a208975bc0787772b40899970be5d8bcf">sequences</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;Sequence&gt;(); }</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ad55c3d663d70b01b26e80fc8212f8ddd">  103</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ad55c3d663d70b01b26e80fc8212f8ddd">rules</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;Rule&gt;(); }</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a8d1303f0c13449fc489057aca065f18a">  104</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8d1303f0c13449fc489057aca065f18a">fault_trees</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;FaultTree&gt;(); }</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#abfbaf94f055094f5ed8418d30105a2b1">  105</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#abfbaf94f055094f5ed8418d30105a2b1">alignments</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;Alignment&gt;(); }</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a2497fa207330c405c11d386b4c600180">  106</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2497fa207330c405c11d386b4c600180">substitutions</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;Substitution&gt;(); }</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a67c4b4764a2807e2e196c9f6cbcaf1da">  107</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a67c4b4764a2807e2e196c9f6cbcaf1da">parameters</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;Parameter&gt;(); }</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ac6d5074e3dd031d48b8e91476c920d8b">  108</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ac6d5074e3dd031d48b8e91476c920d8b">house_events</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;HouseEvent&gt;(); }</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a2881e9bd9ce6d0dd27cfa7b0b6d6c910">  109</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2881e9bd9ce6d0dd27cfa7b0b6d6c910">basic_events</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;BasicEvent&gt;(); }</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a0d93264dee6d7e0ac15c5728891e2582">  110</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a0d93264dee6d7e0ac15c5728891e2582">gates</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;Gate&gt;(); }</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a38c6aef2896850751514f31b253c3d50">  111</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a38c6aef2896850751514f31b253c3d50">ccf_groups</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;CcfGroup&gt;(); }</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#af5bbd00fa974f740dfbf4845d01131a5">  112</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#af5bbd00fa974f740dfbf4845d01131a5">libraries</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;ExternLibrary&gt;(); }</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#aacf620686a42be8fd8a27682556f06a8">  113</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#aacf620686a42be8fd8a27682556f06a8">extern_functions</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> table&lt;ExternFunction&lt;void&gt;&gt;(); }<span class="comment"></span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">  /// @}</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keyword">using</span> Composite::Add;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keyword">using</span> Composite::Remove;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">  /// Adds MEF constructs into the model container.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">  /// @param[in] element  An element defined in this model.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">  /// @throws DuplicateElementError  The element is already in the model.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">  /// @{</span></div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a00c9f35e13a291e4851f943a26783081">  126</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a00c9f35e13a291e4851f943a26783081">Add</a>(std::unique_ptr&lt;HouseEvent&gt; element) {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    AddEvent(std::move(element));</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  }</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#aeeb8563e20b09513b727edaaa5342406">  129</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#aeeb8563e20b09513b727edaaa5342406">Add</a>(std::unique_ptr&lt;BasicEvent&gt; element) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    AddEvent(std::move(element));</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a385c5fa8c5194d2a0cc33fe393805598">  132</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a385c5fa8c5194d2a0cc33fe393805598">Add</a>(std::unique_ptr&lt;Gate&gt; element) { AddEvent(std::move(element)); }</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a4a732cb46bc10522b909cee19e29372d">  133</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a4a732cb46bc10522b909cee19e29372d">Add</a>(std::unique_ptr&lt;Expression&gt; element) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    expressions_.emplace_back(std::move(element));</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a399227af1b36b77162c75a51fe13ebe7">  136</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a399227af1b36b77162c75a51fe13ebe7">Add</a>(std::unique_ptr&lt;Instruction&gt; element) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    instructions_.emplace_back(std::move(element));</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  }<span class="comment"></span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">  /// @}</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">  /// Convenience function to retrieve an event with its ID.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">  /// @param[in] id  The valid ID string of the event.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">  /// @returns The event with its type encoded in variant suitable for formulas.</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">  /// @throws UndefinedElement  The event with the given ID is not in the model.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1Formula.xhtml#a043794bf6edfdbb259e3763a5a7e5076">Formula::ArgEvent</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a7072f42b762e3758127f1755a2c8970e">GetEvent</a>(std::string_view <span class="keywordtype">id</span>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">  /// @copydoc Model::Add(std::unique_ptr&lt;BasicEvent&gt;).</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"></span>  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordtype">void</span> AddEvent(std::unique_ptr&lt;T&gt; element) {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    CheckDuplicateEvent(*element);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    Composite::Add(std::move(element));</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">  /// Checks if an event with the same id is already in the model.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">  /// @param[in] event  The event to be tested for duplicate before insertion.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">  /// @throws DuplicateElementError  The element is already in the model.</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> CheckDuplicateEvent(<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Event.xhtml">Event</a>&amp; event);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">  /// Constructs w/o id or name stored for the duration of the model lifetime.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">  /// @{</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"></span>  std::vector&lt;std::unique_ptr&lt;Expression&gt;&gt; expressions_;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  std::vector&lt;std::unique_ptr&lt;Instruction&gt;&gt; instructions_;<span class="comment"></span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">  /// @}</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  std::unique_ptr&lt;MissionTime&gt; mission_time_;  <span class="comment">///&lt; The system mission time.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"></span>  <a class="code" href="structscram_1_1mef_1_1Context.xhtml">Context</a> context_;  <span class="comment">///&lt; The context to be used by test-event expressions.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}  <span class="comment">// namespace scram::mef</span></div><div class="ttc" id="classscram_1_1mef_1_1Formula_xhtml_a043794bf6edfdbb259e3763a5a7e5076"><div class="ttname"><a href="classscram_1_1mef_1_1Formula.xhtml#a043794bf6edfdbb259e3763a5a7e5076">scram::mef::Formula::ArgEvent</a></div><div class="ttdeci">std::variant&lt; Gate *, BasicEvent *, HouseEvent * &gt; ArgEvent</div><div class="ttdoc">Argument events of a formula. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00229">event.h:229</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a7072f42b762e3758127f1755a2c8970e"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a7072f42b762e3758127f1755a2c8970e">scram::mef::Model::GetEvent</a></div><div class="ttdeci">Formula::ArgEvent GetEvent(std::string_view id)</div><div class="ttdoc">Convenience function to retrieve an event with its ID. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00041">model.cc:41</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a385c5fa8c5194d2a0cc33fe393805598"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a385c5fa8c5194d2a0cc33fe393805598">scram::mef::Model::Add</a></div><div class="ttdeci">void Add(std::unique_ptr&lt; Gate &gt; element)</div><div class="ttdoc">Adds MEF constructs into the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00132">model.h:132</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Event_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Event.xhtml">scram::mef::Event</a></div><div class="ttdoc">Abstract base class for general fault tree events. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00039">event.h:39</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a0084076e529d8ffc6201bad45517c43e"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a0084076e529d8ffc6201bad45517c43e">scram::mef::Model::mission_time</a></div><div class="ttdeci">MissionTime &amp; mission_time()</div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00088">model.h:88</a></div></div>
<div class="ttc" id="fault__tree_8h_xhtml"><div class="ttname"><a href="fault__tree_8h.xhtml">fault_tree.h</a></div><div class="ttdoc">Fault Tree and Component containers. </div></div>
<div class="ttc" id="substitution_8h_xhtml"><div class="ttname"><a href="substitution_8h.xhtml">substitution.h</a></div><div class="ttdoc">The MEF Substitution constructs. </div></div>
<div class="ttc" id="element_8h_xhtml"><div class="ttname"><a href="element_8h.xhtml">element.h</a></div><div class="ttdoc">Base/mixin classes, structs, and properties common to all MEF classes/constructs. ...</div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_af94cbabe75f57f3a1b1ae5d99a09e82b"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#af94cbabe75f57f3a1b1ae5d99a09e82b">scram::mef::Model::initiating_events</a></div><div class="ttdeci">auto initiating_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00100">model.h:100</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_aacf620686a42be8fd8a27682556f06a8"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#aacf620686a42be8fd8a27682556f06a8">scram::mef::Model::extern_functions</a></div><div class="ttdeci">auto extern_functions() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00113">model.h:113</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a9cc591bf6c40805064ea0a9ec0c453c7"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a9cc591bf6c40805064ea0a9ec0c453c7">scram::mef::Model::Model</a></div><div class="ttdeci">Model(std::string name=&quot;&quot;)</div><div class="ttdoc">Creates a model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00029">model.cc:29</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_aeeb8563e20b09513b727edaaa5342406"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#aeeb8563e20b09513b727edaaa5342406">scram::mef::Model::Add</a></div><div class="ttdeci">void Add(std::unique_ptr&lt; BasicEvent &gt; element)</div><div class="ttdoc">Adds MEF constructs into the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00129">model.h:129</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1MissionTime_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1MissionTime.xhtml">scram::mef::MissionTime</a></div><div class="ttdoc">The special parameter for system mission time. </div><div class="ttdef"><b>Definition:</b> <a href="parameter_8h_source.xhtml#l00052">parameter.h:52</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a00c9f35e13a291e4851f943a26783081"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a00c9f35e13a291e4851f943a26783081">scram::mef::Model::Add</a></div><div class="ttdeci">void Add(std::unique_ptr&lt; HouseEvent &gt; element)</div><div class="ttdoc">Adds MEF constructs into the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00126">model.h:126</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a208975bc0787772b40899970be5d8bcf"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a208975bc0787772b40899970be5d8bcf">scram::mef::Model::sequences</a></div><div class="ttdeci">auto sequences() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00102">model.h:102</a></div></div>
<div class="ttc" id="namespacescram_1_1mef_xhtml"><div class="ttname"><a href="namespacescram_1_1mef.xhtml">scram::mef</a></div><div class="ttdef"><b>Definition:</b> <a href="alignment_8cc_source.xhtml#l00026">alignment.cc:26</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a0d93264dee6d7e0ac15c5728891e2582"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a0d93264dee6d7e0ac15c5728891e2582">scram::mef::Model::gates</a></div><div class="ttdeci">auto gates() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00110">model.h:110</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_abfbaf94f055094f5ed8418d30105a2b1"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#abfbaf94f055094f5ed8418d30105a2b1">scram::mef::Model::alignments</a></div><div class="ttdeci">auto alignments() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00105">model.h:105</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a742b8f5f989b633eeeeb192d2e793181"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a742b8f5f989b633eeeeb192d2e793181">scram::mef::Model::HasDefaultName</a></div><div class="ttdeci">bool HasDefaultName() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00072">model.h:72</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a38c6aef2896850751514f31b253c3d50"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a38c6aef2896850751514f31b253c3d50">scram::mef::Model::ccf_groups</a></div><div class="ttdeci">auto ccf_groups() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00111">model.h:111</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ac53c6c0aeaa349b2a0097ec06a51854e"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ac53c6c0aeaa349b2a0097ec06a51854e">scram::mef::Model::event_trees</a></div><div class="ttdeci">auto event_trees() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00101">model.h:101</a></div></div>
<div class="ttc" id="event_8h_xhtml"><div class="ttname"><a href="event_8h.xhtml">event.h</a></div><div class="ttdoc">Contains event classes for fault trees. </div></div>
<div class="ttc" id="structscram_1_1mef_1_1Context_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1Context.xhtml">scram::mef::Context</a></div><div class="ttdoc">The context for test-event expressions. </div><div class="ttdef"><b>Definition:</b> <a href="test__event_8h_source.xhtml#l00031">test_event.h:31</a></div></div>
<div class="ttc" id="test__event_8h_xhtml"><div class="ttname"><a href="test__event_8h.xhtml">test_event.h</a></div><div class="ttdoc">Event tree analysis expressions to test functional and initiating events. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a399227af1b36b77162c75a51fe13ebe7"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a399227af1b36b77162c75a51fe13ebe7">scram::mef::Model::Add</a></div><div class="ttdeci">void Add(std::unique_ptr&lt; Instruction &gt; element)</div><div class="ttdoc">Adds MEF constructs into the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00136">model.h:136</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_af5bbd00fa974f740dfbf4845d01131a5"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#af5bbd00fa974f740dfbf4845d01131a5">scram::mef::Model::libraries</a></div><div class="ttdeci">auto libraries() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00112">model.h:112</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml">scram::mef::Model</a></div><div class="ttdoc">This class represents a risk analysis model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00044">model.h:44</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a4a732cb46bc10522b909cee19e29372d"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a4a732cb46bc10522b909cee19e29372d">scram::mef::Model::Add</a></div><div class="ttdeci">void Add(std::unique_ptr&lt; Expression &gt; element)</div><div class="ttdoc">Adds MEF constructs into the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00133">model.h:133</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a63c29088e50a8e55a75a8c707ee068d3"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a63c29088e50a8e55a75a8c707ee068d3">scram::mef::Model::SetOptionalName</a></div><div class="ttdeci">void SetOptionalName(std::string name=&quot;&quot;)</div><div class="ttdoc">Sets the optional name of the model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00081">model.h:81</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a2881e9bd9ce6d0dd27cfa7b0b6d6c910"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a2881e9bd9ce6d0dd27cfa7b0b6d6c910">scram::mef::Model::basic_events</a></div><div class="ttdeci">auto basic_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00109">model.h:109</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a2497fa207330c405c11d386b4c600180"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a2497fa207330c405c11d386b4c600180">scram::mef::Model::substitutions</a></div><div class="ttdeci">auto substitutions() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00106">model.h:106</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a8c11c1a8b9cd08ac3305ceb35d2ae2b4"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a8c11c1a8b9cd08ac3305ceb35d2ae2b4">scram::mef::Model::GetOptionalName</a></div><div class="ttdeci">const std::string &amp; GetOptionalName() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00075">model.h:75</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a67c4b4764a2807e2e196c9f6cbcaf1da"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a67c4b4764a2807e2e196c9f6cbcaf1da">scram::mef::Model::parameters</a></div><div class="ttdeci">auto parameters() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00107">model.h:107</a></div></div>
<div class="ttc" id="event__tree_8h_xhtml"><div class="ttname"><a href="event__tree_8h.xhtml">event_tree.h</a></div><div class="ttdoc">Event Tree facilities. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adb401e2ca84aa98cb60797bec2500a81"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">scram::mef::Element::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00164">element.h:164</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml">scram::mef::Element</a></div><div class="ttdoc">The MEF Element with attributes and a label. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00135">element.h:135</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ac6d5074e3dd031d48b8e91476c920d8b"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ac6d5074e3dd031d48b8e91476c920d8b">scram::mef::Model::house_events</a></div><div class="ttdeci">auto house_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00108">model.h:108</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a8b18d45a049aaf5cb67c86d0eda87b97"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a8b18d45a049aaf5cb67c86d0eda87b97">scram::mef::Model::kDefaultName</a></div><div class="ttdeci">static constexpr const char kDefaultName[]</div><div class="ttdoc">Only Model is allowed to have an optional name, while all other Elements require names. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00062">model.h:62</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_aa2ee24c81f3e65c321ee3084281f7c14"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#aa2ee24c81f3e65c321ee3084281f7c14">scram::mef::Model::kTypeString</a></div><div class="ttdeci">static constexpr const char * kTypeString</div><div class="ttdoc">Container type identifier string for error messages. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00056">model.h:56</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a8d1303f0c13449fc489057aca065f18a"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a8d1303f0c13449fc489057aca065f18a">scram::mef::Model::fault_trees</a></div><div class="ttdeci">auto fault_trees() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00104">model.h:104</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a8a215a2dd25789bfa65d41cc28b0ac4f"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">scram::mef::Model::mission_time</a></div><div class="ttdeci">const MissionTime &amp; mission_time() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00087">model.h:87</a></div></div>
<div class="ttc" id="ccf__group_8h_xhtml"><div class="ttname"><a href="ccf__group_8h.xhtml">ccf_group.h</a></div><div class="ttdoc">Functional containers for basic events grouped by common cause failure. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ad55c3d663d70b01b26e80fc8212f8ddd"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ad55c3d663d70b01b26e80fc8212f8ddd">scram::mef::Model::rules</a></div><div class="ttdeci">auto rules() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00103">model.h:103</a></div></div>
<div class="ttc" id="extern_8h_xhtml"><div class="ttname"><a href="extern_8h.xhtml">extern.h</a></div><div class="ttdoc">The MEF facilities to call external functions in expressions. </div></div>
<div class="ttc" id="parameter_8h_xhtml"><div class="ttname"><a href="parameter_8h.xhtml">parameter.h</a></div><div class="ttdoc">Parameter expressions that act like a shareable variable. </div></div>
<div class="ttc" id="alignment_8h_xhtml"><div class="ttname"><a href="alignment_8h.xhtml">alignment.h</a></div><div class="ttdoc">Mission and phase constructs. </div></div>
<div class="ttc" id="expression_8h_xhtml"><div class="ttname"><a href="expression_8h.xhtml">expression.h</a></div><div class="ttdoc">Provides the base class for all expressions and units for expression values. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Composite_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Composite.xhtml">scram::mef::Composite</a></div><div class="ttdoc">The composition of multiple mef::Containers. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00583">element.h:583</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a13bd4eb71c3f15f4eece041f19488744"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a13bd4eb71c3f15f4eece041f19488744">scram::mef::Model::context</a></div><div class="ttdeci">Context * context() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00096">model.h:96</a></div></div>
<div class="ttc" id="instruction_8h_xhtml"><div class="ttname"><a href="instruction_8h.xhtml">instruction.h</a></div><div class="ttdoc">Model and event tree modifier instructions. </div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Feb 19 2018 00:21:32 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
