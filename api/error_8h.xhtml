<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>error.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a>  </div>
  <div class="headertitle">
<div class="title">error.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Exceptions for SCRAM.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;exception&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
<code>#include &lt;boost/current_function.hpp&gt;</code><br />
<code>#include &lt;boost/exception/exception.hpp&gt;</code><br />
<code>#include &lt;boost/exception/info.hpp&gt;</code><br />
<code>#include &lt;boost/exception/info_tuple.hpp&gt;</code><br />
<code>#include &quot;<a class="el" href="source__info_8h_source.xhtml">ext/source_info.h</a>&quot;</code><br />
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for error.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="error_8h__incl.svg" width="100%" height="395"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="error_8h__dep__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div>
<p><a href="error_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1Error.xhtml">scram::Error</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The <a class="el" href="classscram_1_1Error.xhtml" title="The Error class is the base class for all exceptions specific to the SCRAM code. ">Error</a> class is the base class for all exceptions specific to the SCRAM code.  <a href="classscram_1_1Error.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1IOError.xhtml">scram::IOError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">For input/output related errors.  <a href="structscram_1_1IOError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1DLError.xhtml">scram::DLError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dynamic library errors.  <a href="structscram_1_1DLError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1LogicError.xhtml">scram::LogicError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signals internal logic errors, for example, pre-condition failure or use of functionality in ways not designed to.  <a href="structscram_1_1LogicError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1IllegalOperation.xhtml">scram::IllegalOperation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This error can be used to indicate that call for a function or operation is not legal.  <a href="structscram_1_1IllegalOperation.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1SettingsError.xhtml">scram::SettingsError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The error in analysis settings.  <a href="structscram_1_1SettingsError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1mef_1_1ValidityError.xhtml">scram::mef::ValidityError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1mef_1_1Model.xhtml" title="This class represents a risk analysis model. ">Model</a> validity errors.  <a href="structscram_1_1mef_1_1ValidityError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1mef_1_1DuplicateElementError.xhtml">scram::mef::DuplicateElementError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This error indicates that elements must be unique.  <a href="structscram_1_1mef_1_1DuplicateElementError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1mef_1_1UndefinedElement.xhtml">scram::mef::UndefinedElement</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The error for undefined elements in a model.  <a href="structscram_1_1mef_1_1UndefinedElement.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1mef_1_1CycleError.xhtml">scram::mef::CycleError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unacceptable cycles in model structures.  <a href="structscram_1_1mef_1_1CycleError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1mef_1_1DomainError.xhtml">scram::mef::DomainError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invalid domain for values or arguments.  <a href="structscram_1_1mef_1_1DomainError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1xml_1_1Error.xhtml">scram::xml::Error</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The base for all XML related errors.  <a href="structscram_1_1xml_1_1Error.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1xml_1_1ParseError.xhtml">scram::xml::ParseError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">XML parsing errors.  <a href="structscram_1_1xml_1_1ParseError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1xml_1_1XIncludeError.xhtml">scram::xml::XIncludeError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">XInclude resolution issues.  <a href="structscram_1_1xml_1_1XIncludeError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1xml_1_1ValidityError.xhtml">scram::xml::ValidityError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">XML document validity errors.  <a href="structscram_1_1xml_1_1ValidityError.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a766d8477fec3466ae1d75208fe0554e7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(err)</td></tr>
<tr class="memdesc:a766d8477fec3466ae1d75208fe0554e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience macro to throw SCRAM exceptions.  <a href="#a766d8477fec3466ae1d75208fe0554e7">More...</a><br /></td></tr>
<tr class="separator:a766d8477fec3466ae1d75208fe0554e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a7eff78c25452f784ccbbb215e480be17"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a7eff78c25452f784ccbbb215e480be17">scram::errinfo_value</a> = boost::error_info&lt; struct tag_value, std::string &gt;</td></tr>
<tr class="memdesc:a7eff78c25452f784ccbbb215e480be17"><td class="mdescLeft">&#160;</td><td class="mdescRight">The generic tag to carry an erroneous value.  <a href="error_8h.xhtml#a7eff78c25452f784ccbbb215e480be17">More...</a><br /></td></tr>
<tr class="separator:a7eff78c25452f784ccbbb215e480be17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b3638e3f64f0885e0523df059be4bc8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8b3638e3f64f0885e0523df059be4bc8"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a8b3638e3f64f0885e0523df059be4bc8">scram::mef::errinfo_attribute</a> = boost::error_info&lt; struct tag_attribute, std::string &gt;</td></tr>
<tr class="memdesc:a8b3638e3f64f0885e0523df059be4bc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">MEF <a class="el" href="classscram_1_1mef_1_1Element.xhtml" title="The MEF Element with attributes and a label. ">Element</a> <a class="el" href="classscram_1_1mef_1_1Attribute.xhtml" title="MEF Element Attributes. ">Attribute</a>. <br /></td></tr>
<tr class="separator:a8b3638e3f64f0885e0523df059be4bc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dfa7762ea76297be64a8dc2c3d32468"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2dfa7762ea76297be64a8dc2c3d32468"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a2dfa7762ea76297be64a8dc2c3d32468">scram::mef::errinfo_reference</a> = boost::error_info&lt; struct tag_reference, std::string &gt;</td></tr>
<tr class="memdesc:a2dfa7762ea76297be64a8dc2c3d32468"><td class="mdescLeft">&#160;</td><td class="mdescRight">The MEF element reference. <br /></td></tr>
<tr class="separator:a2dfa7762ea76297be64a8dc2c3d32468"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa455664604643265595cda6dad527d02"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa455664604643265595cda6dad527d02"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#aa455664604643265595cda6dad527d02">scram::mef::errinfo_base_path</a> = boost::error_info&lt; struct tag_base_path, std::string &gt;</td></tr>
<tr class="memdesc:aa455664604643265595cda6dad527d02"><td class="mdescLeft">&#160;</td><td class="mdescRight">The base path to follow the reference. <br /></td></tr>
<tr class="separator:aa455664604643265595cda6dad527d02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a269daa6fc95b2b8f821d8436f2a6818d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a269daa6fc95b2b8f821d8436f2a6818d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a269daa6fc95b2b8f821d8436f2a6818d">scram::mef::errinfo_cycle</a> = boost::error_info&lt; struct tag_cycle, std::string &gt;</td></tr>
<tr class="memdesc:a269daa6fc95b2b8f821d8436f2a6818d"><td class="mdescLeft">&#160;</td><td class="mdescRight">String representation of invalid cycles/loops. <br /></td></tr>
<tr class="separator:a269daa6fc95b2b8f821d8436f2a6818d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0237a17efc09d0c7ca9900c0f8a3f82a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0237a17efc09d0c7ca9900c0f8a3f82a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a0237a17efc09d0c7ca9900c0f8a3f82a">scram::mef::errinfo_connective</a> = boost::error_info&lt; struct tag_connective, std::string &gt;</td></tr>
<tr class="memdesc:a0237a17efc09d0c7ca9900c0f8a3f82a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connectives in formulae. <br /></td></tr>
<tr class="separator:a0237a17efc09d0c7ca9900c0f8a3f82a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab766600dc63390a9ad23e8818a2e509f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab766600dc63390a9ad23e8818a2e509f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#ab766600dc63390a9ad23e8818a2e509f">scram::xml::errinfo_attribute</a> = boost::error_info&lt; struct tag_xml_attribute, std::string &gt;</td></tr>
<tr class="memdesc:ab766600dc63390a9ad23e8818a2e509f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The XML attribute name. <br /></td></tr>
<tr class="separator:ab766600dc63390a9ad23e8818a2e509f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7067a7f3834bc3c1d8fa25ba70d30011"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7067a7f3834bc3c1d8fa25ba70d30011"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a7067a7f3834bc3c1d8fa25ba70d30011">scram::xml::errinfo_element</a> = boost::error_info&lt; struct tag_xml_element, std::string &gt;</td></tr>
<tr class="memdesc:a7067a7f3834bc3c1d8fa25ba70d30011"><td class="mdescLeft">&#160;</td><td class="mdescRight">The XML element name. <br /></td></tr>
<tr class="separator:a7067a7f3834bc3c1d8fa25ba70d30011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:aa2a2bc0f821302503746dcb342c0deba"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa2a2bc0f821302503746dcb342c0deba"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#aa2a2bc0f821302503746dcb342c0deba">scram::mef::errinfo_container_id</a> = boost::error_info&lt; struct tag_contianer_id, std::string &gt;</td></tr>
<tr class="memdesc:aa2a2bc0f821302503746dcb342c0deba"><td class="mdescLeft">&#160;</td><td class="mdescRight">The MEF container element as namespace. <br /></td></tr>
<tr class="separator:aa2a2bc0f821302503746dcb342c0deba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a048913d02b680c56fb6380a9d8cce570"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a048913d02b680c56fb6380a9d8cce570"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a048913d02b680c56fb6380a9d8cce570">scram::mef::errinfo_container_type</a> = boost::error_info&lt; struct tag_container_type, const char * &gt;</td></tr>
<tr class="memdesc:a048913d02b680c56fb6380a9d8cce570"><td class="mdescLeft">&#160;</td><td class="mdescRight">The MEF container element as namespace. <br /></td></tr>
<tr class="separator:a048913d02b680c56fb6380a9d8cce570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d59ef4f17bbe2874306a4afb8481175"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d59ef4f17bbe2874306a4afb8481175"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a9d59ef4f17bbe2874306a4afb8481175">scram::mef::errinfo_container</a> = boost::tuple&lt; errinfo_container_id, errinfo_container_type &gt;</td></tr>
<tr class="memdesc:a9d59ef4f17bbe2874306a4afb8481175"><td class="mdescLeft">&#160;</td><td class="mdescRight">The MEF container element as namespace. <br /></td></tr>
<tr class="separator:a9d59ef4f17bbe2874306a4afb8481175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:aa4e243d24bc166523703f3e1a2c2840c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa4e243d24bc166523703f3e1a2c2840c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#aa4e243d24bc166523703f3e1a2c2840c">scram::mef::errinfo_element_id</a> = boost::error_info&lt; struct tag_element_id, std::string &gt;</td></tr>
<tr class="memdesc:aa4e243d24bc166523703f3e1a2c2840c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The MEF element identifier data in errors. <br /></td></tr>
<tr class="separator:aa4e243d24bc166523703f3e1a2c2840c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35298805d324ab1a587b745e1fcc8688"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a35298805d324ab1a587b745e1fcc8688"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a35298805d324ab1a587b745e1fcc8688">scram::mef::errinfo_element_type</a> = boost::error_info&lt; struct tag_element_type, const char * &gt;</td></tr>
<tr class="memdesc:a35298805d324ab1a587b745e1fcc8688"><td class="mdescLeft">&#160;</td><td class="mdescRight">The MEF element identifier data in errors. <br /></td></tr>
<tr class="separator:a35298805d324ab1a587b745e1fcc8688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a703fb9ed520e2a4b9ae4076e58ad1b61"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a703fb9ed520e2a4b9ae4076e58ad1b61"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="error_8h.xhtml#a703fb9ed520e2a4b9ae4076e58ad1b61">scram::mef::errinfo_element</a> = boost::tuple&lt; errinfo_element_id, errinfo_element_type &gt;</td></tr>
<tr class="memdesc:a703fb9ed520e2a4b9ae4076e58ad1b61"><td class="mdescLeft">&#160;</td><td class="mdescRight">The MEF element identifier data in errors. <br /></td></tr>
<tr class="separator:a703fb9ed520e2a4b9ae4076e58ad1b61"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Exceptions for SCRAM. </p>
<p>Exceptions are designed with boost::exception; that is, exception classes act like tags. No new data members shall ever be added to derived exception classes (no slicing upon copy or change of exception type!). Instead, all the data are carried with boost::error_info mechanism. </p>

<p>Definition in file <a class="el" href="error_8h_source.xhtml">error.h</a>.</p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a766d8477fec3466ae1d75208fe0554e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SCRAM_THROW</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">err</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">throw</span> err &lt;&lt; ::boost::throw_function(BOOST_THROW_EXCEPTION_CURRENT_FUNCTION) \</div><div class="line">            &lt;&lt; ::boost::throw_file(<a class="code" href="source__info_8h.xhtml#a0f41de3ff7040c8a714480fea733f865">FILE_REL_PATH</a>)                              \</div><div class="line">            &lt;&lt; ::boost::throw_line(__LINE__)</div><div class="ttc" id="source__info_8h_xhtml_a0f41de3ff7040c8a714480fea733f865"><div class="ttname"><a href="source__info_8h.xhtml#a0f41de3ff7040c8a714480fea733f865">FILE_REL_PATH</a></div><div class="ttdeci">#define FILE_REL_PATH</div><div class="ttdoc">Check if CMake provides required definitions. </div><div class="ttdef"><b>Definition:</b> <a href="source__info_8h_source.xhtml#l00030">source_info.h:30</a></div></div>
</div><!-- fragment -->
<p>Convenience macro to throw SCRAM exceptions. </p>
<p>This is similar to BOOST_THROW_EXCEPTION; however, it doesn't obfuscate the resultant exception type to conform to boost::exception.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">err</td><td>The error type deriving from boost::exception. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="error_8h_source.xhtml#l00044">44</a> of file <a class="el" href="error_8h_source.xhtml">error.h</a>.</p>

<p>Referenced by <a class="el" href="substitution_8cc_source.xhtml#l00028">scram::mef::Substitution::Add()</a>, <a class="el" href="fault__tree_8cc_source.xhtml#l00031">scram::mef::Component::Add()</a>, <a class="el" href="event_8cc_source.xhtml#l00052">scram::mef::Formula::ArgSet::Add()</a>, <a class="el" href="element_8h_source.xhtml#l00493">scram::mef::Container&lt; Alignment, Phase &gt;::Add()</a>, <a class="el" href="element_8cc_source.xhtml#l00035">scram::mef::Element::AddAttribute()</a>, <a class="el" href="ccf__group_8cc_source.xhtml#l00069">scram::mef::CcfGroup::AddDistribution()</a>, <a class="el" href="ccf__group_8cc_source.xhtml#l00082">scram::mef::CcfGroup::AddFactor()</a>, <a class="el" href="ccf__group_8cc_source.xhtml#l00054">scram::mef::CcfGroup::AddMember()</a>, <a class="el" href="settings_8cc_source.xhtml#l00046">scram::core::Settings::algorithm()</a>, <a class="el" href="ccf__group_8cc_source.xhtml#l00139">scram::mef::CcfGroup::ApplyModel()</a>, <a class="el" href="settings_8cc_source.xhtml#l00057">scram::core::Settings::approximation()</a>, <a class="el" href="cycle_8h_source.xhtml#l00322">scram::mef::cycle::CheckCycle()</a>, <a class="el" href="config_8cc_source.xhtml#l00057">scram::Config::Config()</a>, <a class="el" href="settings_8cc_source.xhtml#l00097">scram::core::Settings::cut_off()</a>, <a class="el" href="initializer_8cc_source.xhtml#l00423">scram::mef::Initializer::Define()</a>, <a class="el" href="xml_8cc_source.xhtml#l00027">scram::xml::Document::Document()</a>, <a class="el" href="expression_8cc_source.xhtml#l00056">scram::mef::detail::EnsureMultivariateArgs()</a>, <a class="el" href="expression_8cc_source.xhtml#l00102">scram::mef::EnsureNonNegative()</a>, <a class="el" href="expression_8cc_source.xhtml#l00087">scram::mef::EnsurePositive()</a>, <a class="el" href="expression_8cc_source.xhtml#l00075">scram::mef::EnsureProbability()</a>, <a class="el" href="expression_8cc_source.xhtml#l00118">scram::mef::EnsureWithin()</a>, <a class="el" href="parameter_8cc_source.xhtml#l00035">scram::mef::Parameter::expression()</a>, <a class="el" href="extern_8h_source.xhtml#l00201">scram::mef::ExternExpression&lt; R, Args &gt;::ExternExpression()</a>, <a class="el" href="extern_8cc_source.xhtml#l00029">scram::mef::ExternLibrary::ExternLibrary()</a>, <a class="el" href="event__tree_8cc_source.xhtml#l00035">scram::mef::Fork::Fork()</a>, <a class="el" href="fault__tree_8cc_source.xhtml#l00045">scram::mef::Component::GatherGates()</a>, <a class="el" href="extern_8h_source.xhtml#l00070">scram::mef::ExternLibrary::get()</a>, <a class="el" href="element_8h_source.xhtml#l00472">scram::mef::Container&lt; Alignment, Phase &gt;::Get()</a>, <a class="el" href="model_8cc_source.xhtml#l00041">scram::mef::Model::GetEvent()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00173">scram::mef::Histogram::Histogram()</a>, <a class="el" href="initializer_8cc_source.xhtml#l00158">scram::mef::Initializer::Initializer()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00096">scram::mef::LognormalDeviate::interval()</a>, <a class="el" href="settings_8cc_source.xhtml#l00087">scram::core::Settings::limit_order()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00075">scram::mef::LognormalDeviate::LognormalDeviate()</a>, <a class="el" href="numerical_8cc_source.xhtml#l00070">scram::mef::Mean::Mean()</a>, <a class="el" href="settings_8cc_source.xhtml#l00143">scram::core::Settings::mission_time()</a>, <a class="el" href="model_8cc_source.xhtml#l00029">scram::mef::Model::Model()</a>, <a class="el" href="element_8h_source.xhtml#l00098">scram::mef::Attribute::name()</a>, <a class="el" href="element_8cc_source.xhtml#l00027">scram::mef::Element::name()</a>, <a class="el" href="settings_8cc_source.xhtml#l00125">scram::core::Settings::num_bins()</a>, <a class="el" href="settings_8cc_source.xhtml#l00116">scram::core::Settings::num_quantiles()</a>, <a class="el" href="settings_8cc_source.xhtml#l00107">scram::core::Settings::num_trials()</a>, <a class="el" href="initializer_8cc_source.xhtml#l00987">scram::mef::Initializer::Extractor&lt; T,-1 &gt;::operator()()</a>, <a class="el" href="event__tree_8cc_source.xhtml#l00029">scram::mef::Path::Path()</a>, <a class="el" href="exponential_8cc_source.xhtml#l00123">scram::mef::PeriodicTest::PeriodicTest()</a>, <a class="el" href="alignment_8cc_source.xhtml#l00028">scram::mef::Phase::Phase()</a>, <a class="el" href="settings_8cc_source.xhtml#l00076">scram::core::Settings::prime_implicants()</a>, <a class="el" href="initializer_8cc_source.xhtml#l00340">scram::mef::Initializer::Register()</a>, <a class="el" href="event_8cc_source.xhtml#l00065">scram::mef::Formula::ArgSet::Remove()</a>, <a class="el" href="element_8h_source.xhtml#l00512">scram::mef::Container&lt; Alignment, Phase &gt;::Remove()</a>, <a class="el" href="reporter_8cc_source.xhtml#l00104">scram::Reporter::Report()</a>, <a class="el" href="element_8cc_source.xhtml#l00067">scram::mef::Role::Role()</a>, <a class="el" href="settings_8cc_source.xhtml#l00164">scram::core::Settings::safety_integrity_levels()</a>, <a class="el" href="settings_8cc_source.xhtml#l00134">scram::core::Settings::seed()</a>, <a class="el" href="serialization_8cc_source.xhtml#l00039">scram::mef::Serialize()</a>, <a class="el" href="event_8cc_source.xhtml#l00104">scram::mef::Formula::Swap()</a>, <a class="el" href="settings_8cc_source.xhtml#l00152">scram::core::Settings::time_step()</a>, <a class="el" href="xml_8h_source.xhtml#l00073">scram::xml::detail::to()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00044">scram::mef::UniformDeviate::Validate()</a>, <a class="el" href="alignment_8cc_source.xhtml#l00036">scram::mef::Alignment::Validate()</a>, <a class="el" href="substitution_8cc_source.xhtml#l00038">scram::mef::Substitution::Validate()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00059">scram::mef::NormalDeviate::Validate()</a>, <a class="el" href="ccf__group_8cc_source.xhtml#l00117">scram::mef::CcfGroup::Validate()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00122">scram::mef::GammaDeviate::Validate()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00150">scram::mef::BetaDeviate::Validate()</a>, <a class="el" href="random__deviate_8cc_source.xhtml#l00191">scram::mef::Histogram::Validate()</a>, <a class="el" href="xml_8h_source.xhtml#l00450">scram::xml::Validator::validate()</a>, <a class="el" href="xml_8cc_source.xhtml#l00047">scram::xml::Validator::Validator()</a>, <a class="el" href="parameter_8cc_source.xhtml#l00029">scram::mef::MissionTime::value()</a>, <a class="el" href="element_8h_source.xhtml#l00110">scram::mef::Attribute::value()</a>, and <a class="el" href="xml__stream_8h_source.xhtml#l00430">scram::xml::Stream::~Stream()</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="file_a7eff78c25452f784ccbbb215e480be17"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="error_8h.xhtml#a7eff78c25452f784ccbbb215e480be17">scram::errinfo_value</a> = typedef boost::error_info&lt;struct tag_value, std::string&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The generic tag to carry an erroneous value. </p>
<p>Use this tag only if another more-specific error tag is not available. </p>

<p>Definition at line <a class="el" href="error_8h_source.xhtml#l00053">53</a> of file <a class="el" href="error_8h_source.xhtml">error.h</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Feb 19 2018 00:21:32 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
